{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nawabi-PC\\\\Desktop\\\\MERN Project\\\\frontend\\\\src\\\\Component\\\\UplaodFile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { storage } from '../firebase-config';\nimport { listAll, ref, uploadBytes } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UplaodFile() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [image, setImage] = useState(null);\n  const date = new Date().toISOString();\n  // console.log(date)\n  const uploadImage = async () => {\n    setLoading(true);\n    if (image == null) return;\n    const imageRef = ref(storage, `images/${image.name + date}`);\n    console.log(imageRef);\n    uploadBytes(imageRef, image).then(() => {\n      setLoading(false);\n    });\n  };\n  const imageRef = ref();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    listAll();\n    // const get = async()=>{\n\n    // }\n    // get()\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: loading ? \"Please Wait...\" : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setImage(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadImage,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(UplaodFile, \"fg9lkYBo6CsChYvKAD4bQVXzhUY=\");\n_c = UplaodFile;\nvar _c;\n$RefreshReg$(_c, \"UplaodFile\");","map":{"version":3,"names":["React","useState","useEffect","storage","listAll","ref","uploadBytes","jsxDEV","_jsxDEV","UplaodFile","_s","loading","setLoading","image","setImage","date","Date","toISOString","uploadImage","imageRef","name","console","log","then","data","setData","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Nawabi-PC/Desktop/MERN Project/frontend/src/Component/UplaodFile.jsx"],"sourcesContent":["\r\nimport React,{ useState,useEffect } from 'react'\r\nimport { storage } from '../firebase-config';\r\nimport { listAll, ref,uploadBytes } from \"firebase/storage\"\r\n\r\n\r\nexport default function UplaodFile() {\r\n  const [ loading , setLoading ] = useState(false)\r\n\r\n    const [ image,setImage ] = useState(null)\r\n    const date = new Date().toISOString()\r\n    // console.log(date)\r\n    const uploadImage = async() =>{\r\n        setLoading(true)\r\n        if(image==null) return ;\r\n        const imageRef = ref(storage,`images/${image.name + date }`)\r\n        console.log(imageRef)\r\n        uploadBytes(imageRef,image)\r\n        .then(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n    const imageRef = ref()\r\n    const [ data,setData ] = useState([]);\r\n    useEffect(()=>{\r\n        listAll()\r\n        // const get = async()=>{\r\n            \r\n        // }\r\n        // get()\r\n    },[])\r\n\r\n  return (\r\n    <div>\r\n        <h1>Upload File</h1>\r\n        <h2>{loading? \"Please Wait...\":null}</h2>\r\n\r\n        <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n        <button onClick={uploadImage}>Upload</button>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAChD,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,OAAO,EAAEC,GAAG,EAACC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3D,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAAEC,OAAO,EAAGC,UAAU,CAAE,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE9C,MAAM,CAAEY,KAAK,EAACC,QAAQ,CAAE,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACzC,MAAMc,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACrC;EACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAU;IAC1BN,UAAU,CAAC,IAAI,CAAC;IAChB,IAAGC,KAAK,IAAE,IAAI,EAAE;IAChB,MAAMM,QAAQ,GAAGd,GAAG,CAACF,OAAO,EAAE,UAASU,KAAK,CAACO,IAAI,GAAGL,IAAM,EAAC,CAAC;IAC5DM,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrBb,WAAW,CAACa,QAAQ,EAACN,KAAK,CAAC,CAC1BU,IAAI,CAAC,MAAI;MACNX,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EACD,MAAMO,QAAQ,GAAGd,GAAG,CAAC,CAAC;EACtB,MAAM,CAAEmB,IAAI,EAACC,OAAO,CAAE,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACrCC,SAAS,CAAC,MAAI;IACVE,OAAO,CAAC,CAAC;IACT;;IAEA;IACA;EACJ,CAAC,EAAC,EAAE,CAAC;EAEP,oBACEI,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBtB,OAAA;MAAAkB,QAAA,EAAKf,OAAO,GAAE,gBAAgB,GAAC;IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEzCtB,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGC,CAAC,IAAGnB,QAAQ,CAACmB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjEtB,OAAA;MAAQ4B,OAAO,EAAElB,WAAY;MAAAQ,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAACpB,EAAA,CAnCuBD,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}