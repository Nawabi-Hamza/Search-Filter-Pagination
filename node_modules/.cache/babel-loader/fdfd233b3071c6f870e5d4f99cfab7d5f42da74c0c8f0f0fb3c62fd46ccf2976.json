{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nawabi-PC\\\\Desktop\\\\MERN Project\\\\frontend\\\\src\\\\Component\\\\UplaodFile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { storage } from '../firebase-config';\nimport { getDownloadURL, listAll, ref, uploadBytes } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UplaodFile() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [image, setImage] = useState(null);\n  const date = new Date().toISOString();\n  // console.log(date)\n  const uploadImage = async () => {\n    setLoading(true);\n    if (image == null) return;\n    const imageRef = ref(storage, `images/${image.name + date}`);\n    console.log(imageRef);\n    uploadBytes(imageRef, image).then(() => {\n      setLoading(false);\n    });\n  };\n  const imageRef = ref(storage, 'images/');\n  useEffect(() => {\n    listAll(imageRef).then(res => {\n      res.items.forEach(async item => {\n        await getDownloadURL(item).then(async url => {\n          await setData(prev => [...prev, url]);\n        });\n      });\n    });\n  }, [loading]);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: loading ? \"Please Wait...\" : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setImage(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadImage,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), data.map(images => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images,\n        style: {\n          width: \"200px\",\n          height: \"150px\"\n        },\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(UplaodFile, \"/b+aNao2bSwcJ0m9Jw5YZDrVb7w=\");\n_c = UplaodFile;\nvar _c;\n$RefreshReg$(_c, \"UplaodFile\");","map":{"version":3,"names":["React","useState","useEffect","storage","getDownloadURL","listAll","ref","uploadBytes","jsxDEV","_jsxDEV","UplaodFile","_s","loading","setLoading","data","setData","image","setImage","date","Date","toISOString","uploadImage","imageRef","name","console","log","then","res","items","forEach","item","url","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","map","images","src","style","width","height","alt","_c","$RefreshReg$"],"sources":["C:/Users/Nawabi-PC/Desktop/MERN Project/frontend/src/Component/UplaodFile.jsx"],"sourcesContent":["\r\nimport React,{ useState,useEffect } from 'react'\r\nimport { storage } from '../firebase-config';\r\nimport { getDownloadURL, listAll, ref,uploadBytes } from \"firebase/storage\"\r\n\r\n\r\nexport default function UplaodFile() {\r\n  const [ loading , setLoading ] = useState(false)\r\n  const [ data,setData ] = useState([]);\r\n\r\n    const [ image,setImage ] = useState(null)\r\n    const date = new Date().toISOString()\r\n    // console.log(date)\r\n    const uploadImage = async() =>{\r\n        setLoading(true)\r\n        if(image==null) return ;\r\n        const imageRef = ref(storage,`images/${image.name + date }`)\r\n        console.log(imageRef)\r\n        uploadBytes(imageRef,image)\r\n        .then(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n    const imageRef = ref(storage,'images/')\r\n    useEffect(()=>{\r\n            listAll(imageRef)\r\n            .then((res)=>{\r\n                res.items.forEach(async(item)=>{\r\n                   await getDownloadURL(item)\r\n                    .then(async(url)=>{\r\n                       await setData((prev)=>[...prev,url])\r\n                    })\r\n                })\r\n            })\r\n\r\n    },[loading])\r\n    console.log(data)\r\n\r\n  return (\r\n    <div>\r\n        <h1>Upload File</h1>\r\n        <h2>{loading? \"Please Wait...\":null}</h2>\r\n\r\n        <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n        <button onClick={uploadImage}>Upload</button>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        {data.map((images)=>{\r\n            return <img src={images} style={{width:\"200px\",height:\"150px\"}} alt=\"\" />\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}